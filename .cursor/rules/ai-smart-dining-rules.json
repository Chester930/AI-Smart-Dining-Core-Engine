{
  "name": "AI Smart Dining Core Engine Rules",
  "description": "智能餐飲核心引擎開發規則",
  "version": "1.0.0",
  "rules": [
    {
      "name": "項目架構規則",
      "description": "定義項目的整體架構和組織方式",
      "content": [
        "本項目為AI智能餐飲核心引擎，採用模組化架構設計",
        "核心模組包括：用戶管理、訂單處理、智能推薦、支付系統、數據分析",
        "使用微服務架構，每個模組獨立部署和擴展",
        "遵循RESTful API設計原則",
        "採用事件驅動架構處理異步操作"
      ]
    },
    {
      "name": "編碼規範",
      "description": "代碼風格和編寫規範",
      "content": [
        "使用TypeScript進行開發，確保類型安全",
        "遵循ESLint和Prettier配置",
        "函數和變量使用camelCase命名",
        "類和接口使用PascalCase命名",
        "常量使用UPPER_SNAKE_CASE命名",
        "每個函數必須有JSDoc註釋",
        "代碼行長度不超過80字符"
      ]
    },
    {
      "name": "數據庫設計規則",
      "description": "數據庫設計和操作規範",
      "content": [
        "使用PostgreSQL作為主數據庫",
        "使用Redis作為緩存和會話存儲",
        "所有表名使用snake_case命名",
        "必須包含created_at和updated_at時間戳",
        "使用UUID作為主鍵",
        "建立適當的索引以提高查詢性能",
        "實現軟刪除機制"
      ]
    },
    {
      "name": "API設計規則",
      "description": "API端點設計和響應格式",
      "content": [
        "所有API端點使用/api/v1前綴",
        "使用HTTP狀態碼正確表示響應結果",
        "響應格式統一為JSON，包含status、message、data字段",
        "實現API版本控制機制",
        "所有API必須有完整的錯誤處理",
        "使用JWT進行身份驗證",
        "實現API限流和防護機制"
      ]
    },
    {
      "name": "安全規範",
      "description": "安全相關的開發規範",
      "content": [
        "所有用戶輸入必須進行驗證和清理",
        "使用bcrypt進行密碼加密",
        "實現CSRF保護機制",
        "使用HTTPS進行所有通信",
        "敏感配置信息使用環境變量",
        "實現日誌記錄和監控機制",
        "定期進行安全審計"
      ]
    },
    {
      "name": "測試規範",
      "description": "測試代碼編寫和執行規範",
      "content": [
        "單元測試覆蓋率不低於80%",
        "使用Jest作為測試框架",
        "每個API端點必須有集成測試",
        "實現端到端測試",
        "使用Mock數據進行測試",
        "測試文件命名為*.test.ts或*.spec.ts"
      ]
    },
    {
      "name": "文檔規範",
      "description": "代碼文檔和項目文檔規範",
      "content": [
        "使用JSDoc為所有公共API添加文檔",
        "維護README.md文件，包含項目介紹和安裝說明",
        "使用Swagger/OpenAPI生成API文檔",
        "代碼變更必須更新相關文檔",
        "提供部署和配置指南"
      ]
    },
    {
      "name": "性能優化規則",
      "description": "性能相關的開發規範",
      "content": [
        "使用數據庫連接池",
        "實現適當的緩存策略",
        "使用異步處理提高響應速度",
        "優化數據庫查詢，避免N+1問題",
        "實現分頁機制處理大量數據",
        "使用CDN加速靜態資源"
      ]
    },
    {
      "name": "部署規範",
      "description": "部署和運維相關規範",
      "content": [
        "使用Docker容器化應用",
        "實現CI/CD流水線",
        "使用環境變量管理配置",
        "實現健康檢查端點",
        "配置監控和告警機制",
        "實現自動備份策略"
      ]
    }
  ],
  "filePatterns": {
    "*.ts": ["編碼規範", "API設計規則", "安全規範"],
    "*.js": ["編碼規範", "API設計規則", "安全規範"],
    "*.sql": ["數據庫設計規則"],
    "*.md": ["文檔規範"],
    "*.json": ["項目架構規則"],
    "*.yml": ["部署規範"],
    "*.yaml": ["部署規範"]
  },
  "aiBehavior": {
    "context": "你是一個專業的AI智能餐飲系統開發助手，熟悉微服務架構、TypeScript開發、數據庫設計和API開發。請根據項目規則提供準確的技術建議和代碼實現。",
    "preferences": [
      "優先考慮代碼的可維護性和可擴展性",
      "注重安全性和性能優化",
      "提供詳細的註釋和文檔",
      "遵循最佳實踐和設計模式",
      "考慮用戶體驗和業務需求"
    ]
  }
} 